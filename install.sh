#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ KanBe –¥–ª—è Raspberry Pi 3 —Å Debian
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

echo "=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ KanBe –¥–ª—è Raspberry Pi 3 ==="
echo ""

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
PROJECT_DIR="$(pwd)"
echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–∫—Ä–∏–ø—Ç–∞: $SCRIPT_DIR"
echo "–ü—Ä–æ–µ–∫—Ç–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PROJECT_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —Å sudo –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
sudo_exec() {
    local cmd="$*"
    echo "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: sudo $cmd"
    sudo bash -c "cd '$PROJECT_DIR' && $cmd"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
safe_exec() {
    local cmd="$*"
    echo "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: $cmd"
    if ! eval "$cmd"; then
        echo "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: $cmd"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
if [[ "$OSTYPE" != "linux-gnu"* ]]; then
    echo "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Linux (Debian –Ω–∞ Raspberry Pi)"
    echo "–¢–µ–∫—É—â–∞—è –û–°: $OSTYPE"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
ARCH=$(uname -m)
if [[ "$ARCH" != "armv7l" && "$ARCH" != "aarch64" ]]; then
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è ARM –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã (Raspberry Pi)"
    echo "–¢–µ–∫—É—â–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
fi

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
check_disk_space() {
    local min_space_mb=500  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –º–µ—Å—Ç–æ –≤ –ú–ë

    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –≤ –∫–æ—Ä–Ω–µ–≤–æ–º —Ä–∞–∑–¥–µ–ª–µ (–ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ)
    local root_space=$(df / | awk 'NR==2 {print int($4/1024)}')
    local root_device=$(df / | awk 'NR==2 {print $1}')
    echo "–û—Å–Ω–æ–≤–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ ($root_device): ${root_space}MB —Å–≤–æ–±–æ–¥–Ω–æ"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –≤ /var/tmp (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    if [ -d "/var/tmp" ]; then
        local var_space=$(df /var/tmp | awk 'NR==2 {print int($4/1024)}')
        echo "–•—Ä–∞–Ω–∏–ª–∏—â–µ /var/tmp: ${var_space}MB —Å–≤–æ–±–æ–¥–Ω–æ"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –≤ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    local home_space=$(df "$HOME" | awk 'NR==2 {print int($4/1024)}')
    echo "–î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${home_space}MB —Å–≤–æ–±–æ–¥–Ω–æ"

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ä–µ–¥–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â
    local available_space=$root_space
    if [ -d "/var/tmp" ] && [ "$var_space" -gt "$available_space" ]; then
        available_space=$var_space
    fi
    if [ "$home_space" -gt "$available_space" ]; then
        available_space=$home_space
    fi

    echo "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${available_space}MB"

    if [ "$available_space" -lt "$min_space_mb" ]; then
        echo "‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (${available_space}MB < ${min_space_mb}MB)"

        # –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        echo "üßπ –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

        # –û—á–∏—â–∞–µ–º /var/tmp –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -d "/var/tmp" ]; then
            sudo find /var/tmp -type f -mtime +1 -delete 2>/dev/null || true
            sudo find /var/tmp -type d -mtime +1 -exec rm -rf {} + 2>/dev/null || true
        fi

        # –û—á–∏—â–∞–µ–º –∫—ç—à –≤ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        if [ -d "$HOME/.npm" ]; then
            npm cache clean --force 2>/dev/null || true
        fi

        # –û—á–∏—â–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫—ç—à–∏
        sudo apt-get clean 2>/dev/null || true
        sudo apt-get autoclean 2>/dev/null || true

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
        root_space=$(df / | awk 'NR==2 {print int($4/1024)}')
        available_space=$root_space

        if [ -d "/var/tmp" ]; then
            var_space=$(df /var/tmp | awk 'NR==2 {print int($4/1024)}')
            if [ "$var_space" -gt "$available_space" ]; then
                available_space=$var_space
            fi
        fi

        echo "–°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: ${available_space}MB"

        if [ "$available_space" -lt "$min_space_mb" ]; then
            echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
            echo ""
            echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é –º–µ—Å—Ç–∞:"
            echo ""
            echo "1. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:"
            echo "   sudo apt-get clean && sudo apt-get autoclean"
            echo "   sudo apt-get autoremove"
            echo ""
            echo "2. –û—á–∏—Å—Ç–∏—Ç–µ npm –∫—ç—à:"
            echo "   npm cache clean --force"
            echo ""
            echo "3. –£–¥–∞–ª–∏—Ç–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ /var/tmp:"
            echo "   sudo find /var/tmp -type f -mtime +1 -delete"
            echo ""
            echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
            echo "   df -h"
            echo "   du -sh /var/* /home/* 2>/dev/null | sort -hr | head -10"
            echo ""
            echo "5. –£–≤–µ–ª–∏—á—å—Ç–µ —Ä–∞–∑–º–µ—Ä —Ä–∞–∑–¥–µ–ª–∞ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ):"
            echo "   sudo raspi-config (Advanced Options -> Expand Filesystem)"
            echo ""
            echo "–¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º ${min_space_mb}MB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
            exit 1
        fi
    fi

    echo "‚úÖ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ (${available_space}MB –¥–æ—Å—Ç—É–ø–Ω–æ)"
}

# –ó–∞–ø—Ä–æ—Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo ""
echo "=== –í—ã–±–æ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ==="
echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo ""
read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å KanBe –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é? (y/n): " USE_CURRENT_DIR

if [[ $USE_CURRENT_DIR =~ ^[Nn]$ ]]; then
    read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ KanBe: " INSTALL_DIR

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ ! -d "$INSTALL_DIR" ]; then
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $INSTALL_DIR –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
        read -p "–°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é? (y/n): " CREATE_DIR
        if [[ $CREATE_DIR =~ ^[Yy]$ ]]; then
            if ! mkdir -p "$INSTALL_DIR"; then
                echo "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $INSTALL_DIR"
                exit 1
            fi
            echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $INSTALL_DIR —Å–æ–∑–¥–∞–Ω–∞"
        else
            echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
            exit 1
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if [ ! -w "$INSTALL_DIR" ]; then
        echo "–û—à–∏–±–∫–∞: –Ω–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $INSTALL_DIR"
        exit 1
    fi

    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if ! cd "$INSTALL_DIR"; then
        echo "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $INSTALL_DIR"
        exit 1
    fi

    echo "‚úÖ KanBe –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: $(pwd)"
else
    echo "‚úÖ KanBe –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $(pwd)"
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
PROJECT_DIR="$(pwd)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
check_disk_space

echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ:"
echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $PROJECT_DIR"
echo ""

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."

# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –º–µ—Å—Ç–∞
echo "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ—Å—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
sudo_exec "apt-get clean" || true
sudo_exec "apt-get autoclean" || true
sudo_exec "rm -rf /var/lib/apt/lists/*" || true

# –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –º–µ—Å—Ç–∞
if ! sudo_exec "apt-get update"; then
    echo "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã. –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä..."

    # –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    echo "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π..."
    sudo_exec "find /var/cache -type f -delete" || true
    sudo_exec "find /var/log -name '*.log' -type f -exec truncate -s 0 {} +" || true

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    sudo_exec "apt-get autoremove -y" || true
    sudo_exec "apt-get clean" || true

    # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if ! sudo_exec "apt-get update"; then
        echo "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –º–µ—Å—Ç–∞"
        echo ""
        echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é –º–µ—Å—Ç–∞:"
        echo ""
        echo "1. –û—á–∏—Å—Ç–∏—Ç–µ –≤—Å–µ –∫—ç—à–∏:"
        echo "   sudo apt-get clean && sudo apt-get autoclean"
        echo "   sudo rm -rf /var/lib/apt/lists/*"
        echo ""
        echo "2. –£–¥–∞–ª–∏—Ç–µ –Ω–µ–Ω—É–∂–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:"
        echo "   sudo apt-get autoremove -y"
        echo ""
        echo "3. –û—á–∏—Å—Ç–∏—Ç–µ –ª–æ–≥–∏:"
        echo "   sudo find /var/log -name '*.log' -exec truncate -s 0 {} +"
        echo ""
        echo "4. –£–≤–µ–ª–∏—á—å—Ç–µ —Ä–∞–∑–º–µ—Ä —Ä–∞–∑–¥–µ–ª–∞:"
        echo "   sudo raspi-config (Advanced Options -> Expand Filesystem)"
        echo ""
        echo "5. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
        echo "   sudo apt-get update --allow-unauthenticated"
        echo ""
        exit 1
    fi
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø–∞–∫–µ—Ç—ã —Å–∏—Å—Ç–µ–º—ã? (y/n): " UPDATE_PACKAGES
if [[ $UPDATE_PACKAGES =~ ^[Yy]$ ]]; then
    echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤..."
    if ! sudo_exec "apt-get upgrade -y"; then
        echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã"
    fi
else
    echo "–ü—Ä–æ–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if ! sudo_exec "apt install -y curl wget git build-essential python3-dev sqlite3 nginx"; then
    echo "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
if command -v node &> /dev/null && command -v npm &> /dev/null; then
    NODE_VERSION=$(node --version 2>/dev/null)
    NPM_VERSION=$(npm --version 2>/dev/null)
    if [[ -n "$NODE_VERSION" && -n "$NPM_VERSION" ]]; then
        echo "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:"
        echo "Node.js –≤–µ—Ä—Å–∏—è: $NODE_VERSION"
        echo "NPM –≤–µ—Ä—Å–∏—è: $NPM_VERSION"
        NODE_INSTALLED=true
    else
        NODE_INSTALLED=false
    fi
else
    NODE_INSTALLED=false
fi

if [ "$NODE_INSTALLED" = false ]; then
    echo "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."

    # –ü–æ–ø—ã—Ç–∫–∞ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ nodesource
    echo "–ü–æ–ø—ã—Ç–∫–∞ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ NodeSource..."
    if curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -; then
        sudo apt-get update
        if sudo apt-get install -y nodejs; then
            echo "Node.js —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ NodeSource"
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏
    if command -v node &> /dev/null && command -v npm &> /dev/null && node --version &> /dev/null && npm --version &> /dev/null; then
        echo "Node.js –≤–µ—Ä—Å–∏—è: $(node --version)"
        echo "NPM –≤–µ—Ä—Å–∏—è: $(npm --version)"
    else
        # –ü–æ–ø—ã—Ç–∫–∞ 2: –û—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞
        echo "–ü–æ–ø—ã—Ç–∫–∞ 2: –û—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        sudo apt-get remove --purge -y nodejs npm node-* 2>/dev/null || true
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo apt-get update

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Debian
        if sudo apt-get install -y nodejs npm; then
            echo "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Debian"
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–π –ø–æ–ø—ã—Ç–∫–∏
        if command -v node &> /dev/null && command -v npm &> /dev/null && node --version &> /dev/null && npm --version &> /dev/null; then
            echo "Node.js –≤–µ—Ä—Å–∏—è: $(node --version)"
            echo "NPM –≤–µ—Ä—Å–∏—è: $(npm --version)"
        else
            # –ü–æ–ø—ã—Ç–∫–∞ 3: –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            echo "–ü–æ–ø—ã—Ç–∫–∞ 3: –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js..."
            NODE_VERSION="18.19.1"
            ARCH=$(uname -m)
            if [[ "$ARCH" == "aarch64" ]]; then
                NODE_ARCH="arm64"
            elif [[ "$ARCH" == "armv7l" ]]; then
                NODE_ARCH="armv7l"
            else
                echo "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
                exit 1
            fi

            echo "–ó–∞–≥—Ä—É–∑–∫–∞ Node.js $NODE_VERSION –¥–ª—è $NODE_ARCH..."
            if wget -q "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${NODE_ARCH}.tar.xz"; then
                sudo mkdir -p /usr/local
                sudo tar -xf "node-v${NODE_VERSION}-linux-${NODE_ARCH}.tar.xz" -C /usr/local --strip-components=1
                rm "node-v${NODE_VERSION}-linux-${NODE_ARCH}.tar.xz"

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ PATH –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                if ! command -v node &> /dev/null; then
                    export PATH="/usr/local/bin:$PATH"
                    echo 'export PATH="/usr/local/bin:$PATH"' >> ~/.bashrc
                fi

                if command -v node &> /dev/null && command -v npm &> /dev/null && node --version &> /dev/null && npm --version &> /dev/null; then
                    echo "Node.js —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é"
                    echo "Node.js –≤–µ—Ä—Å–∏—è: $(node --version)"
                    echo "NPM –≤–µ—Ä—Å–∏—è: $(npm --version)"
                else
                    echo "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js"
                    echo ""
                    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é:"
                    echo "sudo apt-get remove --purge nodejs npm"
                    echo "curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -"
                    echo "sudo apt-get install -y nodejs"
                    echo ""
                    echo "–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤—Ä—É—á–Ω—É—é:"
                    echo "wget https://nodejs.org/dist/v18.19.1/node-v18.19.1-linux-arm64.tar.xz"
                    echo "sudo tar -xf node-v18.19.1-linux-arm64.tar.xz -C /usr/local --strip-components=1"
                    exit 1
                fi
            else
                echo "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Node.js"
                exit 1
            fi
        fi
    fi
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
if command -v npm &> /dev/null; then
    if ! sudo_exec "npm install -g pm2"; then
        echo "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PM2 —á–µ—Ä–µ–∑ npm. –ü–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ apt..."
        if ! sudo_exec "apt-get install -y pm2"; then
            echo "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PM2"
            exit 1
        fi
    fi
else
    echo "npm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2 —á–µ—Ä–µ–∑ apt..."
    if ! sudo_exec "apt-get install -y pm2"; then
        echo "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PM2"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
if [ ! -f "package.json" ]; then
    echo "–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    if git clone https://github.com/iwizard7/KanBe.git temp_kanbe 2>/dev/null; then
        # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ temp_kanbe –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        mv temp_kanbe/* . 2>/dev/null || true
        mv temp_kanbe/.* . 2>/dev/null || true
        rm -rf temp_kanbe
        echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
    else
        echo "–û—à–∏–±–∫–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Ä—É—á–Ω—É—é –∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:"
        echo "git clone https://github.com/iwizard7/KanBe.git"
        exit 1
    fi
else
    echo "–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
if [ ! -f "package.json" ]; then
    echo "–û—à–∏–±–∫–∞: package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞..."
MAX_NPM_ATTEMPTS=4
for ((attempt=1; attempt<=MAX_NPM_ATTEMPTS; attempt++)); do
    echo "–ü–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $MAX_NPM_ATTEMPTS..."

    # –†–∞–∑–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
    case $attempt in
        1)
            echo "–°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞..."
            INSTALL_CMD="npm install --no-audit --no-fund --timeout=60000"
            ;;
        2)
            echo "–°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: –° —Ñ–ª–∞–≥–æ–º legacy-peer-deps..."
            INSTALL_CMD="npm install --no-audit --no-fund --timeout=60000 --legacy-peer-deps"
            ;;
        3)
            echo "–°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
            INSTALL_CMD="npm install --no-audit --no-fund --timeout=60000 --force"
            ;;
        4)
            echo "–°—Ç—Ä–∞—Ç–µ–≥–∏—è 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ —Å–Ω–∞—á–∞–ª–∞..."
            # –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫—Ä–æ–º–µ bcrypt
            safe_exec "npm install --no-audit --no-fund --timeout=60000 --legacy-peer-deps" || true
            # –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bcrypt –æ—Ç–¥–µ–ª—å–Ω–æ
            INSTALL_CMD="npm install bcrypt --no-audit --no-fund --timeout=60000 --build-from-source"
            ;;
    esac

    if safe_exec "$INSTALL_CMD"; then
        echo "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        break
    else
        echo "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ $attempt (—Å—Ç—Ä–∞—Ç–µ–≥–∏—è $attempt)"
        if [ $attempt -eq $MAX_NPM_ATTEMPTS ]; then
            echo ""
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ $MAX_NPM_ATTEMPTS –ø–æ–ø—ã—Ç–æ–∫"
            echo ""
            echo "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å bcrypt:"
            echo ""
            echo "–í–∞—Ä–∏–∞–Ω—Ç 1 - –û–±–Ω–æ–≤–∏—Ç—å npm –∏ node:"
            echo "  npm install -g npm@latest"
            echo "  sudo apt-get update && sudo apt-get upgrade nodejs"
            echo ""
            echo "–í–∞—Ä–∏–∞–Ω—Ç 2 - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å bcrypt –æ—Ç–¥–µ–ª—å–Ω–æ:"
            echo "  npm uninstall bcrypt"
            echo "  npm install bcryptjs"
            echo ""
            echo "–í–∞—Ä–∏–∞–Ω—Ç 3 - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å yarn –≤–º–µ—Å—Ç–æ npm:"
            echo "  npm install -g yarn"
            echo "  yarn install"
            echo ""
            echo "–í–∞—Ä–∏–∞–Ω—Ç 4 - –°–æ–±—Ä–∞—Ç—å –Ω–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –≤—Ä—É—á–Ω—É—é:"
            echo "  sudo apt-get install build-essential python3-dev"
            echo "  npm install --build-from-source"
            echo ""
            echo "–í–∞—Ä–∏–∞–Ω—Ç 5 - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
            echo "  docker run -it node:18 bash"
            echo ""
            echo "üö® –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
            echo "npm config set python python3"
            echo "npm install bcrypt --build-from-source --no-optional"
            exit 1
        fi

        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ 4
        if [ $attempt -eq 3 ]; then
            echo "‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ..."
            echo "–û—á–∏—Å—Ç–∫–∞ node_modules –∏ package-lock.json..."
            rm -rf node_modules package-lock.json 2>/dev/null || true
            echo "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã..."
            sleep 3
        else
            echo "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥..."
            sleep 5
        fi

        # –û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
        if [ $attempt -lt $MAX_NPM_ATTEMPTS ]; then
            echo "üßπ –û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞..."
            npm cache clean --force 2>/dev/null || true
        fi
    fi
done

# –°–±–æ—Ä–∫–∞ better-sqlite3 –¥–ª—è ARM
echo "–°–±–æ—Ä–∫–∞ better-sqlite3 –¥–ª—è ARM –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã..."
if ! safe_exec "npm rebuild better-sqlite3"; then
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å better-sqlite3"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if ! mkdir -p data; then
    echo "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ data"
    exit 1
fi

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
echo ""
echo "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ==="

read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è API —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5000): " API_PORT
API_PORT=${API_PORT:-5000}

read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3000): " DEV_PORT
DEV_PORT=${DEV_PORT:-3000}

read -p "–í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç –¥–ª—è —Å–µ—Å—Å–∏–π (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏): " SESSION_SECRET
if [ -z "$SESSION_SECRET" ]; then
    SESSION_SECRET=$(openssl rand -hex 32)
    echo "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–µ–∫—Ä–µ—Ç —Å–µ—Å—Å–∏–∏: $SESSION_SECRET"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–°–æ–∑–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è? (y/n): " CREATE_USER
if [[ $CREATE_USER =~ ^[Yy]$ ]]; then
    read -p "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " APP_USER
    if [ -n "$APP_USER" ]; then
        if ! sudo_exec "useradd -m -s /bin/bash $APP_USER"; then
            echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $APP_USER"
            APP_USER=""
        else
            echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $APP_USER —Å–æ–∑–¥–∞–Ω"
        fi
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > .env << EOF
NODE_ENV=production
PORT=$API_PORT
SESSION_SECRET=$SESSION_SECRET
DATABASE_URL=./data/kanbe.db
DEV_PORT=$DEV_PORT
EOF

if [ ! -f ".env" ]; then
    echo "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ .env"
    exit 1
fi
echo "–§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if ! safe_exec "npm run db:push"; then
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
fi

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if ! safe_exec "npm run build"; then
    echo "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    exit 1
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å nginx –∫–∞–∫ reverse proxy? (y/n): " SETUP_NGINX
if [[ $SETUP_NGINX =~ ^[Yy]$ ]]; then
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
    sudo tee /etc/nginx/sites-available/kanbe > /dev/null <<EOF
server {
    listen 80;
    server_name localhost;

    # API –ø—Ä–æ–∫—Å–∏
    location /api {
        proxy_pass http://localhost:$API_PORT;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }

    # –§—Ä–æ–Ω—Ç–µ–Ω–¥ (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã)
    location / {
        proxy_pass http://localhost:$DEV_PORT;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

    # –í–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–π—Ç–∞
    sudo ln -sf /etc/nginx/sites-available/kanbe /etc/nginx/sites-enabled/
    sudo rm -f /etc/nginx/sites-enabled/default

    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    sudo nginx -t

    echo "nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ nginx: sudo systemctl restart nginx"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo ""
echo "=== –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ==="
read -p "Email –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " ADMIN_EMAIL
read -s -p "–ü–∞—Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " ADMIN_PASSWORD
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
cat > create_admin.js << EOF
import Database from 'better-sqlite3';
import { drizzle } from 'drizzle-orm/better-sqlite3';
import * as schema from '${PROJECT_DIR}/shared/schema.js';
import bcrypt from 'bcrypt';

console.log('–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', process.cwd());
console.log('–ü—É—Ç—å –∫ —Å—Ö–µ–º–µ:', '${PROJECT_DIR}/shared/schema.js');

const sqlite = new Database('${PROJECT_DIR}/data/kanbe.db');
const db = drizzle({ client: sqlite, schema });

async function createAdmin() {
    const email = process.argv[2];
    const password = process.argv[3];

    if (!email || !password) {
        console.error('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node create_admin.js <email> <password>');
        process.exit(1);
    }

    try {
        const hashedPassword = await bcrypt.hash(password, 10);

        const [user] = await db
            .insert(schema.users)
            .values({
                email,
                password: hashedPassword,
                firstName: 'Admin',
                lastName: 'User',
            })
            .returning();

        console.log(\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å \${email} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ\`);
        console.log(\`ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \${user.id}\`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        console.error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ö–µ–º—ã –∏ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    } finally {
        sqlite.close();
    }
}

createAdmin();
EOF

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
if [ -f "create_admin.js" ]; then
    node create_admin.js "$ADMIN_EMAIL" "$ADMIN_PASSWORD"
else
    echo "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª create_admin.js –Ω–µ —Å–æ–∑–¥–∞–Ω"
fi

# –û—á–∏—Å—Ç–∫–∞
rm -f create_admin.js

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."

if [[ $CREATE_USER =~ ^[Yy]$ && -n "$APP_USER" ]]; then
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ñ–∞–π–ª–æ–≤
    sudo chown -R $APP_USER:$APP_USER .

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ systemd
    sudo tee /etc/systemd/system/kanbe.service > /dev/null <<EOF
[Unit]
Description=KanBe Application
After=network.target

[Service]
Type=simple
User=$APP_USER
WorkingDirectory=$(pwd)
ExecStart=$(which pm2) start dist/index.js --name kanbe
Restart=always
RestartSec=10
Environment=NODE_ENV=production

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable kanbe
    echo "–°–µ—Ä–≤–∏—Å kanbe —Å–æ–∑–¥–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω"
    echo "–ó–∞–ø—É—Å–∫: sudo systemctl start kanbe"
    echo "–°—Ç–∞—Ç—É—Å: sudo systemctl status kanbe"
else
    echo "–î–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ PM2:"
    echo "pm2 start dist/index.js --name kanbe"
    echo "pm2 save"
    echo "pm2 startup"
fi

echo ""
echo "=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ==="
echo ""
echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ."
echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ./data/kanbe.db"
echo "API –ø–æ—Ä—Ç: $API_PORT"
echo "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–æ—Ä—Ç (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞): $DEV_PORT"
echo "–ê–¥–º–∏–Ω: $ADMIN_EMAIL"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:"
echo "  API —Å–µ—Ä–≤–µ—Ä: npm run dev (–ø–æ—Ä—Ç $API_PORT)"
echo "  –§—Ä–æ–Ω—Ç–µ–Ω–¥: npm run dev:client (–ø–æ—Ä—Ç $DEV_PORT)"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ: npm run start"
echo ""
echo "–ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω nginx, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost"
echo "–ò–Ω–∞—á–µ:"
echo "  API: http://localhost:$API_PORT"
echo "  –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:$DEV_PORT"
echo ""
echo "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ PM2:"
echo "pm2 list"
echo "pm2 logs kanbe"
echo "pm2 restart kanbe"
