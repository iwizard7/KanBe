#!/bin/bash

# üéØ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ KanBe –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
# üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –û–°, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_step() {
    echo -e "${BLUE}üîÑ [–®–ê–ì] $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "${PURPLE}üéØ === –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ KanBe ===${NC}"
    echo ""
}

print_footer() {
    echo ""
    echo -e "${GREEN}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ KanBe!${NC}"
}



# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
detect_platform() {
    print_header

    print_step "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã..."

    OS=$(uname -s)
    ARCH=$(uname -m)

    case $OS in
        "Darwin")
            PLATFORM="macos"
            print_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ macOS"
            ;;
        "Linux")
            PLATFORM="linux"
            print_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Linux"

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Raspberry Pi
            if [[ -f /proc/device-tree/model ]] && grep -q "Raspberry Pi" /proc/device-tree/model 2>/dev/null; then
                PLATFORM="raspberry-pi"
                print_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω Raspberry Pi"
            fi
            ;;
        *)
            print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OS"
            exit 1
            ;;
    esac

    case $ARCH in
        "arm64"|"aarch64")
            CPU_ARCH="arm64"
            print_info "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: ARM64"
            ;;
        "x86_64"|"amd64")
            CPU_ARCH="x86_64"
            print_info "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: x86_64"
            ;;
        "armv7l")
            CPU_ARCH="armv7l"
            print_info "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: ARMv7 (32-bit)"
            ;;
        *)
            print_warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
            CPU_ARCH="unknown"
            ;;
    esac

    print_success "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞: $PLATFORM ($CPU_ARCH)"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
install_nodejs() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if command -v node &> /dev/null && command -v npm &> /dev/null; then
        NODE_VERSION=$(node --version 2>/dev/null)
        NPM_VERSION=$(npm --version 2>/dev/null)
        if [[ -n "$NODE_VERSION" && -n "$NPM_VERSION" ]]; then
            print_info "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
            return 0
        fi
    fi

    case $PLATFORM in
        "macos")
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –Ω–∞ macOS —á–µ—Ä–µ–∑ Homebrew (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
            if command -v brew &> /dev/null; then
                print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js —á–µ—Ä–µ–∑ Homebrew..."
                brew install node@18
                print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Homebrew"
            else
                print_warning "Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Homebrew –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"
                read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Homebrew? (y/n): " INSTALL_BREW
                if [[ $INSTALL_BREW =~ ^[Yy]$ ]]; then
                    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
                    brew install node@18
                    print_success "Homebrew –∏ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
                else
                    print_error "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤—Ä—É—á–Ω—É—é: https://nodejs.org/"
                    exit 1
                fi
            fi
            ;;
        "linux"|"raspberry-pi")
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –Ω–∞ Linux
            if command -v apt-get &> /dev/null; then
                print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js —á–µ—Ä–µ–∑ apt..."
                curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
                sudo apt-get install -y nodejs
                print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else
                print_error "–ù–µ –Ω–∞–π–¥–µ–Ω apt-get. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤—Ä—É—á–Ω—É—é"
                exit 1
            fi
            ;;
    esac

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if command -v node &> /dev/null && command -v npm &> /dev/null; then
        print_success "Node.js –≤–µ—Ä—Å–∏—è: $(node --version)"
        print_success "NPM –≤–µ—Ä—Å–∏—è: $(npm --version)"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
install_dependencies() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è package.json
    if [ ! -f "package.json" ]; then
        print_error "–§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    case $PLATFORM in
        "macos")
            print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è macOS..."
            if [ "$CPU_ARCH" = "arm64" ]; then
                print_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è Apple Silicon (ARM64)..."
                npm config set python python3
                npm install --no-audit --no-fund --timeout=60000
            else
                npm install --no-audit --no-fund --timeout=60000
            fi
            ;;
        "raspberry-pi")
            print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Raspberry Pi..."
            npm install --no-audit --no-fund --timeout=60000 --legacy-peer-deps
            ;;
        "linux")
            print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Linux..."
            npm install --no-audit --no-fund --timeout=60000
            ;;
    esac

    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–±–æ—Ä–∫–∞ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
build_native_modules() {
    print_step "–°–±–æ—Ä–∫–∞ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π..."

    case $PLATFORM in
        "macos")
            if [ "$CPU_ARCH" = "arm64" ]; then
                print_info "–°–±–æ—Ä–∫–∞ –¥–ª—è Apple Silicon (ARM64)..."
                # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è better-sqlite3 –Ω–∞ Apple Silicon
                npm rebuild better-sqlite3 --build-from-source
                print_success "–ù–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å–æ–±—Ä–∞–Ω—ã –¥–ª—è Apple Silicon"
            else
                npm rebuild
                print_success "–ù–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å–æ–±—Ä–∞–Ω—ã"
            fi
            ;;
        "raspberry-pi"|"linux")
            print_info "–°–±–æ—Ä–∫–∞ –¥–ª—è ARM –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã..."
            npm rebuild better-sqlite3
            print_success "–ù–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å–æ–±—Ä–∞–Ω—ã"
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setup_database() {
    print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    mkdir -p data

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    if command -v npm &> /dev/null; then
        npm run db:push
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    else
        print_warning "NPM –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_config() {
    print_step "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

    # –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è API —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5000): " API_PORT
    API_PORT=${API_PORT:-5000}

    read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3000): " DEV_PORT
    DEV_PORT=${DEV_PORT:-3000}

    read -p "–í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç –¥–ª—è —Å–µ—Å—Å–∏–π (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏): " SESSION_SECRET
    if [ -z "$SESSION_SECRET" ]; then
        if command -v openssl &> /dev/null; then
            SESSION_SECRET=$(openssl rand -hex 32)
        else
            SESSION_SECRET="default-secret-$(date +%s)"
        fi
        print_info "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–µ–∫—Ä–µ—Ç —Å–µ—Å—Å–∏–∏: $SESSION_SECRET"
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    cat > .env << EOF
NODE_ENV=production
PORT=$API_PORT
SESSION_SECRET=$SESSION_SECRET
DATABASE_URL=./data/kanbe.db
DEV_PORT=$DEV_PORT
PLATFORM=$PLATFORM
CPU_ARCH=$CPU_ARCH
EOF

    print_success "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω"
}

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
build_application() {
    print_step "–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

    if command -v npm &> /dev/null; then
        npm run build
        print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
    else
        print_warning "NPM –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main() {
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    detect_platform

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    check_requirements

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
    install_nodejs

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_dependencies

    # –°–±–æ—Ä–∫–∞ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    build_native_modules

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    setup_database

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    create_config

    # –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    build_application

    print_footer

    echo ""
    echo -e "${CYAN}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ:${NC}"
    echo "   –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: $PLATFORM"
    echo "   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $CPU_ARCH"
    echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
    echo ""
    echo -e "${GREEN}üöÄ KanBe –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!${NC}"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
    echo "  –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: npm run dev (API) + npm run dev:client (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)"
    echo "  –ü—Ä–æ–¥–∞–∫—à–Ω: npm run start"
    echo ""
    echo "–ü–æ—Ä—Ç—ã:"
    echo "  API: $API_PORT"
    echo "  –§—Ä–æ–Ω—Ç–µ–Ω–¥: $DEV_PORT"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
