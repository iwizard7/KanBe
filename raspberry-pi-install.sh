#!/bin/bash

# üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ KanBe –¥–ª—è Raspberry Pi
# üîÑ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è ARMv7 —Å –ø–æ—à–∞–≥–æ–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
print_step() {
    echo -e "${BLUE}üîÑ [–®–ê–ì] $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "${PURPLE}üéØ === –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ KanBe –¥–ª—è Raspberry Pi ===${NC}"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_raspberry_pi() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ Raspberry Pi..."

    if [[ ! -f /proc/device-tree/model ]] || ! grep -q "Raspberry Pi" /proc/device-tree/model 2>/dev/null; then
        print_error "–≠—Ç–æ –Ω–µ Raspberry Pi. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω—ã–π install.sh"
        exit 1
    fi

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ Raspberry Pi
    if grep -q "Raspberry Pi 5" /proc/device-tree/model 2>/dev/null; then
        PI_MODEL="Raspberry Pi 5"
        CPU_CORES=4
        RAM_SIZE="4GB+"
    elif grep -q "Raspberry Pi 4" /proc/device-tree/model 2>/dev/null; then
        PI_MODEL="Raspberry Pi 4"
        CPU_CORES=4
        RAM_SIZE="2GB+"
    elif grep -q "Raspberry Pi 3" /proc/device-tree/model 2>/dev/null; then
        PI_MODEL="Raspberry Pi 3"
        CPU_CORES=4
        RAM_SIZE="1GB"
    else
        PI_MODEL="Raspberry Pi (—Å—Ç–∞—Ä–æ–π –º–æ–¥–µ–ª–∏)"
        CPU_CORES=1
        RAM_SIZE="<1GB"
    fi

    print_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω: $PI_MODEL"
    print_info "–Ø–¥—Ä–∞ CPU: $CPU_CORES, RAM: $RAM_SIZE"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    ARCH=$(uname -m)
    if [[ $ARCH == "armv7l" ]]; then
        print_info "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: ARMv7 (32-bit)"
    elif [[ $ARCH == "aarch64" ]]; then
        print_info "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: ARM64"
    else
        print_warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –¥–ª—è Raspberry Pi
install_nodejs_pi() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –¥–ª—è Raspberry Pi..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if command -v node &> /dev/null && command -v npm &> /dev/null; then
        NODE_VERSION=$(node --version 2>/dev/null)
        if [[ $NODE_VERSION == v18* ]] || [[ $NODE_VERSION == v20* ]]; then
            print_success "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
            return 0
        fi
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ NodeSource –¥–ª—è Raspberry Pi
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18 —á–µ—Ä–µ–∑ NodeSource..."

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è NodeSource
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
    sudo apt-get install -y nodejs

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if command -v node &> /dev/null && command -v npm &> /dev/null; then
        print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
        print_success "NPM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(npm --version)"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js"
        exit 1
    fi
}

# –ü–æ—à–∞–≥–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies_step_by_step() {
    print_step "–ü–æ—à–∞–≥–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Raspberry Pi..."

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –¥–ª—è Raspberry Pi
    export NODE_OPTIONS="--max-old-space-size=512"
    export UV_THREADPOOL_SIZE=2
    export npm_config_cache="$HOME/.npm-cache-kanbe"
    export npm_config_tmp="$PWD/.npm-tmp"

    mkdir -p "$HOME/.npm-cache-kanbe" "$PWD/.npm-tmp"

    print_info "NODE_OPTIONS: $NODE_OPTIONS"
    print_info "UV_THREADPOOL_SIZE: $UV_THREADPOOL_SIZE"

    # –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö runtime –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_info "–®–∞–≥ 1/4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install --save \
        express@^4.21.2 \
        better-sqlite3@^12.4.1 \
        drizzle-orm@^0.39.1 \
        bcrypt@^5.1.1 \
        ws@^8.18.0 \
        --timeout=300000 --legacy-peer-deps --no-package-lock --verbose || {
        print_warning "–ß–∞—Å—Ç–∏—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    }

    # –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ React –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    print_info "–®–∞–≥ 2/4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ React –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install --save \
        react@^18.3.1 \
        react-dom@^18.3.1 \
        @tanstack/react-query@^5.60.5 \
        wouter@^3.3.5 \
        --timeout=300000 --legacy-peer-deps --no-package-lock --verbose || {
        print_warning "–ß–∞—Å—Ç–∏—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ React –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    }

    # –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ UI –±–∏–±–ª–∏–æ—Ç–µ–∫ (Radix UI)
    print_info "–®–∞–≥ 3/4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    npm install --save \
        @radix-ui/react-dialog@^1.1.7 \
        @radix-ui/react-dropdown-menu@^2.1.7 \
        lucide-react@^0.453.0 \
        class-variance-authority@^0.7.1 \
        clsx@^2.1.1 \
        tailwind-merge@^2.6.0 \
        --timeout=300000 --legacy-peer-deps --no-package-lock --verbose || {
        print_warning "–ß–∞—Å—Ç–∏—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
    }

    # –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_info "–®–∞–≥ 4/4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install --save-dev \
        vite@^5.4.20 \
        @vitejs/plugin-react@^4.7.0 \
        typescript@^5.6.3 \
        tsx@^4.20.5 \
        drizzle-kit@^0.31.4 \
        esbuild@^0.25.0 \
        --timeout=300000 --legacy-peer-deps --no-package-lock --verbose || {
        print_warning "–ß–∞—Å—Ç–∏—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    }

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    if [ -f "node_modules/.bin/drizzle-kit" ] && [ -f "node_modules/.bin/tsx" ]; then
        print_success "–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
}

# –°–±–æ—Ä–∫–∞ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –¥–ª—è Raspberry Pi
build_native_modules_pi() {
    print_step "–°–±–æ—Ä–∫–∞ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –¥–ª—è Raspberry Pi..."

    export NODE_OPTIONS="--max-old-space-size=512"
    export UV_THREADPOOL_SIZE=2

    print_info "–°–±–æ—Ä–∫–∞ better-sqlite3..."
    npm rebuild better-sqlite3 --build-from-source --timeout=600000 --verbose || {
        print_warning "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ better-sqlite3, –ø—Ä–æ–±—É–µ–º –±–µ–∑ --build-from-source"
        npm rebuild better-sqlite3 --timeout=300000 --verbose || print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å better-sqlite3"
    }

    print_success "–ù–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å–æ–±—Ä–∞–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setup_database_pi() {
    print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

    mkdir -p data

    if [ ! -f "node_modules/.bin/drizzle-kit" ]; then
        print_error "drizzle-kit –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    print_info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    npm run db:push || {
        print_error "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        return 1
    }

    if [ -f "data/kanbe.db" ]; then
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    else
        print_error "–§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω"
        return 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Raspberry Pi
create_config_pi() {
    print_step "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Raspberry Pi..."

    SESSION_SECRET=$(openssl rand -hex 32 2>/dev/null || echo "pi-secret-$(date +%s)")

    cat > .env << EOF
NODE_ENV=production
PORT=3000
SESSION_SECRET=$SESSION_SECRET
DATABASE_URL=./data/kanbe.db
PLATFORM=raspberry-pi
CPU_ARCH=armv7l
SINGLE_USER=true
EOF

    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
}

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Raspberry Pi
build_application_pi() {
    print_step "–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Raspberry Pi..."

    export NODE_OPTIONS="--max-old-space-size=512"

    if npm run build:raspberry-pi; then
        print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
    else
        print_warning "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏, –ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å–±–æ—Ä–∫—É..."
        npm run build || print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è Raspberry Pi
create_systemd_service_pi() {
    print_step "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è Raspberry Pi..."

    SERVICE_FILE="/etc/systemd/system/kanbe.service"
    WORKING_DIR="$(pwd)"

    sudo tee $SERVICE_FILE > /dev/null << EOF
[Unit]
Description=KanBe Kanban Application (Raspberry Pi Optimized)
After=network.target
Wants=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=$WORKING_DIR
ExecStart=$WORKING_DIR/node_modules/.bin/tsx $WORKING_DIR/server/index.ts
Restart=always
RestartSec=15
Environment=NODE_ENV=production
Environment=PORT=3000
Environment=DATABASE_URL=$WORKING_DIR/data/kanbe.db
Environment=SESSION_SECRET=$SESSION_SECRET

# Raspberry Pi –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
Environment=NODE_OPTIONS=--max-old-space-size=256
Environment=UV_THREADPOOL_SIZE=2
Environment=SQLITE_BUSY_TIMEOUT=30000

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è Raspberry Pi
MemoryLimit=256M
CPUQuota=50%
Nice=10

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
NoNewPrivileges=yes
PrivateTmp=yes
ProtectSystem=strict
ReadWritePaths=$WORKING_DIR/data
ProtectHome=yes

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
StandardOutput=journal
StandardError=journal
SyslogIdentifier=kanbe

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable kanbe

    print_success "Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    check_raspberry_pi
    install_nodejs_pi
    install_dependencies_step_by_step
    build_native_modules_pi
    setup_database_pi
    create_config_pi
    build_application_pi
    create_systemd_service_pi

    echo ""
    echo -e "${GREEN}üöÄ KanBe –¥–ª—è Raspberry Pi –≥–æ—Ç–æ–≤!${NC}"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "  –ó–∞–ø—É—Å–∫: sudo systemctl start kanbe"
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: sudo systemctl stop kanbe"
    echo "  –°—Ç–∞—Ç—É—Å: sudo systemctl status kanbe"
    echo "  –õ–æ–≥–∏: sudo journalctl -u kanbe -f"
    echo ""
    echo -e "${CYAN}üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:3000${NC}"
}

main "$@"