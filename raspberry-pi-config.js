#!/usr/bin/env node

/**
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Raspberry Pi 3
 * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–∞–º—è—Ç–∏
 */

const os = require('os');
const fs = require('fs');
const path = require('path');

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Raspberry Pi
function isRaspberryPi() {
  try {
    const model = fs.readFileSync('/proc/device-tree/model', 'utf8');
    return model.includes('Raspberry Pi');
  } catch {
    return false;
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
function getSystemInfo() {
  return {
    platform: os.platform(),
    arch: os.arch(),
    totalMemory: os.totalmem(),
    freeMemory: os.freemem(),
    cpus: os.cpus().length,
    loadAverage: os.loadavg(),
    isRaspberryPi: isRaspberryPi()
  };
}

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è Raspberry Pi
function applyRaspberryPiOptimizations() {
  const sysInfo = getSystemInfo();

  if (!sysInfo.isRaspberryPi) {
    console.log('‚ùå –≠—Ç–æ –Ω–µ Raspberry Pi. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.');
    return false;
  }

  console.log('üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –¥–ª—è Raspberry Pi 3...');
  console.log(`üìä –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:`, {
    '–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä': `${sysInfo.cpus} —è–¥–µ—Ä`,
    '–ü–∞–º—è—Ç—å': `${Math.round(sysInfo.totalMemory / 1024 / 1024)}MB`,
    '–ó–∞–≥—Ä—É–∑–∫–∞': sysInfo.loadAverage.map(x => x.toFixed(2)).join(', ')
  });

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  process.env.NODE_OPTIONS = [
    process.env.NODE_OPTIONS,
    '--max-old-space-size=256',  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ heap –¥–æ 256MB
    '--optimize-for-size',      // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–º–µ—Ä–∞
    '--max-semi-space-size=16', // –£–º–µ–Ω—å—à–µ–Ω–∏–µ semi-space
    '--noconcurrent-sweeping'   // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ concurrent sweeping
  ].filter(Boolean).join(' ');

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è libuv (Node.js thread pool)
  process.env.UV_THREADPOOL_SIZE = '2'; // –¢–æ–ª—å–∫–æ 2 –ø–æ—Ç–æ–∫–∞ –¥–ª—è Raspberry Pi

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è SQLite
  process.env.SQLITE_BUSY_TIMEOUT = '30000'; // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
  process.env.SQLITE_CACHE_SIZE = '-2000';   // 2MB cache
  process.env.SQLITE_SYNCHRONOUS = 'NORMAL'; // –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
  process.env.SQLITE_JOURNAL_MODE = 'WAL';   // Write-Ahead Logging

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è Express
  process.env.COMPRESSION_LEVEL = '1'; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è

  console.log('‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è Raspberry Pi –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
  console.log('üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.log(`   NODE_OPTIONS: ${process.env.NODE_OPTIONS}`);
  console.log(`   UV_THREADPOOL_SIZE: ${process.env.UV_THREADPOOL_SIZE}`);
  console.log(`   SQLITE_BUSY_TIMEOUT: ${process.env.SQLITE_BUSY_TIMEOUT}`);

  return true;
}

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
function startPerformanceMonitoring() {
  const startTime = process.hrtime.bigint();
  let lastMemoryUsage = process.memoryUsage();

  setInterval(() => {
    const currentMemory = process.memoryUsage();
    const uptime = Number(process.hrtime.bigint() - startTime) / 1e9;

    console.log(`üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å [${uptime.toFixed(0)}s]:`, {
      'RSS': `${Math.round(currentMemory.rss / 1024 / 1024)}MB`,
      'Heap Used': `${Math.round(currentMemory.heapUsed / 1024 / 1024)}MB`,
      'Heap Total': `${Math.round(currentMemory.heapTotal / 1024 / 1024)}MB`,
      'External': `${Math.round(currentMemory.external / 1024 / 1024)}MB`
    });

    lastMemoryUsage = currentMemory;
  }, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
module.exports = {
  isRaspberryPi,
  getSystemInfo,
  applyRaspberryPiOptimizations,
  startPerformanceMonitoring
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
if (require.main === module) {
  console.log('üöÄ Raspberry Pi Configuration Tool');
  console.log('=====================================');

  if (applyRaspberryPiOptimizations()) {
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è Raspberry Pi 3:');
    console.log('   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π SSD –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: vcgencmd measure_temp');
    console.log('   ‚Ä¢ –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    console.log('   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ nginx –∫–∞–∫ reverse proxy –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è');

    // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–µ
    startPerformanceMonitoring();
  }
}
